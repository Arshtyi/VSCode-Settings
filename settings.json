{
    // =========================================================================
    // Window / General
    // Basic UI and window behavior
    // =========================================================================
    "window.newWindowProfile": "默认", // New window profile to use.
    "window.dialogStyle": "custom", // Use custom dialog style.
    "window.restoreFullscreen": true, // Restore fullscreen on launch.
    "security.workspace.trust.untrustedFiles": "open", // Open untrusted files without trust prompt.

    // =========================================================================
    // Workbench Appearance
    // Theme, icons, lists, tabs and UI behavior
    // =========================================================================
    "workbench.colorTheme": "Winter is Coming (Dark Blue)", // UI color theme.
    "workbench.iconTheme": "material-icon-theme", // File icon theme.
    "workbench.productIconTheme": "bongocat", // Product-wide icon theme.
    "workbench.preferredHighContrastColorTheme": "Winter is Coming (Dark Blue - No Italics)", // Preferred high contrast theme.
    "workbench.list.smoothScrolling": true, // Smooth scrolling for lists.
    "workbench.list.horizontalScrolling": true, // Allow horizontal scrolling in lists.
    "workbench.tree.indent": 40, // Indent size for tree views.
    "workbench.tree.renderIndentGuides": "always", // Always show indent guides in trees.
    "workbench.tree.stickyScrollMaxItemCount": 10, // Max items for sticky scroll in trees.
    "workbench.editor.showTabs": "multiple", // Show tab bar only if multiple editors open.
    "workbench.editor.wrapTabs": true, // Wrap tabs instead of horizontal scrolling.
    "workbench.editor.highlightModifiedTabs": true, // Highlight modified tabs.
    "workbench.editor.scrollToSwitchTabs": true, // Scroll tab list to active tab.
    "workbench.editor.pinnedTabsOnSeparateRow": true, // Show pinned tabs on a separate row.
    "workbench.startupEditor": "none", // Do not open welcome/startup editor.
    "workbench.commandPalette.preserveInput": true, // Preserve previous Command Palette input.
    "workbench.settings.showAISearchToggle": true, // Show AI search toggle in settings.
    "workbench.settings.applyToAllProfiles": ["editor.fontFamily", "workbench.list.horizontalScrolling"], // Settings to apply across profiles.

    // =========================================================================
    // Editor: Core
    // Editing behavior, navigation and basic features
    // =========================================================================
    "editor.wordWrap": "on", // Enable word-wrap.
    "editor.mouseWheelZoom": true, // Ctrl+mouse wheel changes font size.
    "editor.foldingImportsByDefault": true, // Fold import blocks on open.
    "editor.definitionLinkOpensInPeek": true, // Open definitions in peek by default.
    "editor.stickyScroll.maxLineCount": 20, // Max lines for sticky scroll.
    "editor.stickyTabStops": true, // Keep tab stops sticky.

    // =========================================================================
    // Editor: Font & Visual
    // Typeface, cursor, whitespace and minimap visual settings
    // =========================================================================
    "editor.fontSize": 14, // Editor font size in px.
    "editor.fontFamily": "'Fira Code','Maple Mono','Cousine Nerd Font','JetBrains Mono'", // Editor font family.
    "editor.fontLigatures": true, // Enable font ligatures.
    "editor.smoothScrolling": true, // Smooth scrolling in editor.
    "editor.cursorStyle": "line", // Cursor style.
    "editor.cursorBlinking": "smooth", // Cursor blinking animation.
    "editor.cursorSmoothCaretAnimation": "on", // Smooth caret animation.
    "editor.renderWhitespace": "all", // Render all whitespace characters.
    "editor.renderControlCharacters": true, // Render control characters.
    "editor.guides.bracketPairs": "active", // Highlight active bracket pair guides.
    "editor.minimap.renderCharacters": false, // Render blocks in minimap instead of chars.
    "editor.rulers": [], // No vertical rulers.

    // =========================================================================
    // Files: Saving & Formatting
    // Autosave, trimming and indentation
    // =========================================================================
    "files.autoSave": "onFocusChange", // Autosave when editor loses focus.
    "files.autoSaveDelay": 200, // Delay (ms) used by some autosave modes.
    "files.trimTrailingWhitespace": true, // Trim trailing whitespace on save.
    "files.insertFinalNewline": true, // Ensure final newline on save.
    "files.trimFinalNewlines": true, // Trim extra final newlines on save.
    "editor.tabSize": 4, // Number of spaces per tab.
    "editor.detectIndentation": false, // Disable auto-detect indentation.
    "editor.defaultFormatter": "esbenp.prettier-vscode", // Default formatter (normal mode).
    "editor.formatOnSave": true, // Format on save.
    "editor.formatOnPaste": true, // Format pasted content.
    "editor.formatOnType": true, // Format while typing.

    // =========================================================================
    // Explorer & Files
    // File explorer behavior, associations, exclusions and nesting
    // =========================================================================
    "explorer.confirmDelete": false, // Disable delete confirmation in explorer.
    "explorer.compactFolders": true, // Compact single-child folders.
    "files.associations": {
        "*.vue": "vue", // Treat .vue files as Vue.
        "*.wpy": "vue", // Treat .wpy as Vue.
        "*.wxml": "html", // Treat .wxml as HTML.
        "*.wxss": "css" // Treat .wxss as CSS.
    },
    "files.exclude": {
        "**/.git": true, // Hide .git from explorer/search.
        "**/.svn": true, // Hide .svn.
        "**/.hg": true, // Hide .hg.
        "**/CVS": true, // Hide CVS folders.
        "**/.DS_Store": true, // Hide macOS DS_Store files.
        "**/*.js": { "when": "$(basename).ts" }, // Hide JS when corresponding TS exists.
        "**/node_modules": true // Hide node_modules.
    },
    "explorer.fileNesting.patterns": {
        "*.ts": "${capture}.js", // Nest generated .js under .ts
        "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts", // Nest maps/min/d.ts
        "*.jsx": "${capture}.js", // Nest .js under .jsx
        "*.tsx": "${capture}.ts", // Nest .ts under .tsx
        "tsconfig.json": "tsconfig.*.json", // Nest tsconfig variants
        "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml, bun.lockb, bun.lock", // Package lock files
        "*.sqlite": "${capture}.${extname}-*", // SQLite related files
        "*.db": "${capture}.${extname}-*",
        "*.sqlite3": "${capture}.${extname}-*",
        "*.db3": "${capture}.${extname}-*",
        "*.sdb": "${capture}.${extname}-*",
        "*.s3db": "${capture}.${extname}-*"
    },
    "workbench.editorAssociations": {
        "*.copilotmd": "vscode.markdown.preview.editor", // Use markdown preview for copilotmd
        "file:/**/*.xlsx": "default", // Use default editor for .xlsx by file URI
        "file:/**/*.csv": "default", // Use default for .csv by file URI
        "*.xlsx": "cweijan.officeViewer", // Use office viewer for .xlsx
        "*.cdb": "sqlite-viewer.option", // Use sqlite viewer for .cdb
        "*.md": "cweijan.markdownViewer.optional" // Use custom markdown viewer for .md
    },

    // =========================================================================
    // Search
    // Global patterns to exclude from search
    // =========================================================================
    "search.exclude": {
        "**/node_modules": true, // Exclude node_modules from search
        "**/bower_components": true, // Exclude bower components
        "**/target": true, // Exclude build target dirs
        "**/logs": true, // Exclude logs
        "**/dist": true, // Exclude dist
        "**/build": true, // Exclude build
        "**/.git": true, // Exclude .git
        "**/.svn": true, // Exclude .svn
        "**/.hg": true, // Exclude .hg
        "**/.DS_Store": true, // Exclude .DS_Store
        "**/.vscode": true, // Exclude .vscode folder
        "**/.history": true, // Exclude extension history
        "**__pytcache__": true, // Exclude Python cache
        "**/.pytest_cache": true, // Exclude pytest cache
        "**/.mypy_cache": true, // Exclude mypy cache
        "**/.vscode-test": true // Exclude vscode-test artifacts
    },

    // =========================================================================
    // Source Control / Git
    // Git settings and behaviors
    // =========================================================================
    "git.enableSmartCommit": true, // Smart commit when nothing staged.
    "git.autofetch": true, // Auto-fetch remotes.
    "git.confirmSync": false, // Do not confirm on sync.
    "git.openRepositoryInParentFolders": "never", // Never search parent folders for repos.
    "git.ignoreWindowsGit27Warning": true, // Ignore old Git warning on Windows.
    "git.terminalAuthentication": false, // Do not use terminal for git auth.
    "git.replaceTagsWhenPull": true, // Allow replacing tags on pull.

    // =========================================================================
    // Terminal
    // Integrated terminal settings
    // =========================================================================
    "terminal.integrated.smoothScrolling": true, // Smooth scroll in terminal.
    "terminal.integrated.fontLigatures.enabled": true, // Enable ligatures in terminal font.
    "terminal.integrated.fontFamily": "", // Terminal font family (default).
    "terminal.integrated.inheritEnv": false, // Terminal should not inherit VS Code env.
    "terminal.integrated.defaultProfile.linux": "zsh", // Default Linux shell profile.
    "terminal.integrated.commandsToSkipShell": ["matlab.interrupt"], // Commands handled by VS Code.

    // =========================================================================
    // Debugging
    // Debugger defaults for various languages
    // =========================================================================
    "debug.javascript.defaultRuntimeExecutable": { "pwa-node": "node" }, // JS debug runtime mapping.
    "debugpy.debugJustMyCode": true, // Python: debug just my code.
    "java.debug.settings.showStaticVariables": true, // Show static vars in Java debugger.
    "java.debug.settings.showQualifiedNames": true, // Show qualified names in Java debugger.

    // =========================================================================
    // Remote Development & Sync
    // SSH hosts, extension kinds and sync exclusions
    // =========================================================================
    "remote.SSH.remotePlatform": { "LinuxServer": "linux", "154.44.26.17": "linux" }, // Remote SSH platform mapping.
    "remote.extensionKind": { "GitHub.copilot": ["ui"], "GitHub.copilot-chat": ["ui"] }, // Where extensions run (ui/remote).
    "remote.autoForwardPorts": false, // Disable auto port forwarding for remotes.
    "settingsSync.ignoredSettings": ["-C_Cpp.clang_format_path"], // Settings to ignore for sync.
    "workbench.experimental.cloudChanges.partialMatches.enabled": true, // Experimental cloud changes partial match.

    // =========================================================================
    // Editor Behavior Modes
    // NORMAL / COMPETITION toggle blocks (COMPETITION left commented)
    // =========================================================================
    // NORMAL MODE: full features
    "editor.codeActionsOnSave": {}, // Disable actions on save.
    "editor.tabCompletion": "on", // Tab completion behavior.
    "editor.suggest.preview": true, // Show suggestion preview in editor.
    "editor.hover.enabled": false, // Disable hover tooltips in editor.
    "editor.inlineSuggest.edits.allowCodeShifting": "always", // Inline suggestions may shift code.
    "editor.inlineSuggest.edits.showCollapsed": true, // Show inline suggestions collapsed.
    "editor.inlineCompletionsAccessibilityVerbose": true, // Verbose accessibility info for inline completions.
    "github.copilot.enable": { "*": true }, // Enable GitHub Copilot for all languages.
    "editor.inlayHints.enabled": "on", // Inlay hints visibility.

    // COMPETITION MODE (commented): minimal features, all helpers disabled
    // "editor.codeActionsOnSave": {}, // Disable actions on save.
    // "editor.tabCompletion": "off", // Disable tab completion.
    // "editor.hover.enabled": true, // Enable hover tooltips in competition (example).
    // "editor.suggest.preview": false, // Hide suggestion preview.
    // "editor.inlineSuggest.edits.allowCodeShifting": "never", // Prevent code shifting.
    // "editor.inlineSuggest.edits.showCollapsed": false, // Do not show inline suggestions collapsed.
    // "editor.inlineCompletionsAccessibilityVerbose": false, // Disable verbose inline completion accessibility.
    // "editor.inlayHints.enabled": "off", // Turn off inlay hints globally.
    // "github.copilot.enable": { "*": false }, // Disable Copilot globally.

    // =========================================================================
    // Language-specific overrides
    // Default formatters and per-language tweaks
    // =========================================================================
    "[c]": { "editor.defaultFormatter": "ms-vscode.cpptools" }, // C files formatter.
    "[cpp]": { "editor.defaultFormatter": "ms-vscode.cpptools" }, // C++ files formatter.
    "[java]": { "editor.defaultFormatter": "redhat.java" }, // Java files formatter.
    "[tex]": { "editor.defaultFormatter": "James-Yu.latex-workshop", "editor.tabSize": 4 }, // TeX settings.
    "[latex]": {
        "editor.defaultFormatter": "James-Yu.latex-workshop",
        "editor.formatOnSave": true,
        "editor.suggestSelection": "recentlyUsedByPrefix"
    }, // LaTeX settings.
    "[typst]": { "editor.wordSeparators": "`~!@#$%^&*()=+[{]}\\|;:'\",.<>/?" }, // Typst word separators.
    "[typst-code]": { "editor.wordSeparators": "`~!@#$%^&*()=+[{]}\\|;:'\",.<>/?" }, // Typst-code word separators.

    // =========================================================================
    // GitHub Copilot / Chat and Assistant
    // Chat features and language/context toggles
    // =========================================================================
    "github.copilot.chat.scopeSelection": true, // Allow scope selection for Copilot Chat.
    "github.copilot.chat.editor.temporalContext.enabled": true, // Enable temporal editor context for chat.
    "github.copilot.chat.edits.temporalContext.enabled": true, // Enable temporal edits context.
    "github.copilot.chat.generateTests.codeLens": true, // Show CodeLens to generate tests.
    "github.copilot.nextEditSuggestions.enabled": true, // Enable next edit suggestions.
    "github.copilot.nextEditSuggestions.fixes": true, // Allow fixes in next edit suggestions.
    "github.copilot.chat.codesearch.enabled": true, // Enable code search in Copilot Chat.
    "github.copilot.chat.agent.thinkingTool": true, // Show thinking tool indicator.
    "github.copilot.chat.languageContext.typescript.enabled": true, // TypeScript language context in chat.
    "github.copilot.chat.languageContext.inline.typescript.enabled": true, // Inline TypeScript context.
    "github.copilot.chat.languageContext.fix.typescript.enabled": true, // Fix generation TypeScript context.
    "chat.agent.enabled": true, // Enable chat agent feature.
    "chat.editing.confirmEditRequestRetry": false, // Do not confirm when retrying chat edits.
    "chat.mcp.enabled": true, // Enable multi-chat processing.

    // Inlay hints and analysis settings
    "editor.inlayHints.padding": true, // Add padding for inlay hints.
    "editor.inlayHints.fontFamily": "", // Font family for inlay hints (default).
    "python.analysis.aiCodeActions": { "implementAbstractClasses": true }, // Enable AI code actions for Python.
    "python.analysis.autoFormatStrings": true, // Auto-format Python strings.
    "python.analysis.autoImportCompletions": true, // Auto import on completion for Python.
    "python.analysis.completeFunctionParens": true, // Add parens when completing functions.
    "python.analysis.typeCheckingMode": "standard", // Python type checking mode.
    "python.analysis.inlayHints.callArgumentNames": "all", // Show call argument names inlay hints.
    "python.analysis.inlayHints.functionReturnTypes": true, // Show function return type inlay hints.
    "python.analysis.inlayHints.pytestParameters": true, // Show pytest parameter inlay hints.
    "python.analysis.inlayHints.variableTypes": true, // Show variable type inlay hints.
    "C_Cpp.copilotHover": "enabled", // Enable Copilot hover in C/C++.
    "C_Cpp.inlayHints.autoDeclarationTypes.enabled": true, // Show auto declaration types on C/C++.
    "C_Cpp.inlayHints.parameterNames.enabled": true, // Show parameter name hints in C/C++.
    "C_Cpp.inlayHints.referenceOperator.enabled": true, // Show reference operator hints in C/C++.

    // =========================================================================
    // GitHub Pull Requests extension
    // PR related experimental and default behaviors
    // =========================================================================
    "githubPullRequests.experimental.chat": true, // Experimental chat in PR view.
    "githubPullRequests.experimental.useQuickChat": true, // Enable quick chat for PRs.
    "githubPullRequests.pullRequestDescription": "Copilot", // Default PR description.
    "githubPullRequests.createOnPublishBranch": "never", // Do not auto-create PR on publish.

    // =========================================================================
    // C/C++ extension settings
    // IntelliSense, formatting and inlay hints for C/C++
    // =========================================================================
    "C_Cpp.intelliSenseEngine": "default", // C/C++ IntelliSense engine.
    "C_Cpp.formatting": "clangFormat", // Use clang-format for C/C++.
    "C_Cpp.default.configurationProvider": "ms-vscode.cpptools", // Default configuration provider.
    "C_Cpp.inlayHints.autoDeclarationTypes.showOnLeft": true, // Show auto type hints on left.
    "C_Cpp.inlayHints.referenceOperator.showSpace": true, // Show space after reference operator hint.
    "C_Cpp.vcFormat.space.afterCastCloseParenthesis": true, // Space after cast close parenthesis.
    "C_Cpp.vcFormat.space.beforeComma": true, // Space before comma.
    "C_Cpp.vcFormat.space.beforeEmptySquareBrackets": true, // Space before empty []
    "C_Cpp.vcFormat.space.beforeFunctionOpenParenthesis": "insert", // Insert space before function '('.
    "C_Cpp.vcFormat.space.beforeInitializerListOpenBrace": true, // Space before initializer list brace.
    "C_Cpp.vcFormat.space.beforeLambdaOpenParenthesis": true, // Space before lambda open parenthesis.
    "C_Cpp.vcFormat.space.beforeOpenSquareBracket": true, // Space before '['.
    "C_Cpp.vcFormat.space.betweenEmptyBraces": true, // Space between empty braces {}.
    "C_Cpp.vcFormat.space.betweenEmptyLambdaBrackets": true, // Space between empty lambda brackets [].
    "C_Cpp.vcFormat.space.betweenEmptyParameterListParentheses": true, // Space between empty parameter list ().
    "C_Cpp.vcFormat.space.betweenEmptySquareBrackets": true, // Space between empty square brackets [].
    "C_Cpp.vcFormat.space.insertAfterSemicolon": true, // Insert space after semicolon.
    "C_Cpp.vcFormat.space.withinCastParentheses": true, // Space within cast parentheses.
    "C_Cpp.vcFormat.space.withinControlFlowStatementParentheses": true, // Space within control flow parentheses.
    "C_Cpp.vcFormat.space.withinExpressionParentheses": true, // Space within expression parentheses.
    "C_Cpp.vcFormat.space.withinLambdaBrackets": true, // Space within lambda brackets.
    "C_Cpp.vcFormat.space.withinParameterListParentheses": true, // Space within parameter list parentheses.
    "C_Cpp.vcFormat.space.withinSquareBrackets": true, // Space within square brackets.
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.block": "newLine", // Place block opening brace on new line.
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.function": "newLine", // Place function opening brace on new line.
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.lambda": "sameLine", // Lambda opening brace on same line.
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.namespace": "newLine", // Namespace opening brace on new line.
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.type": "sameLine", // Type opening brace on same line.
    "C_Cpp.vcFormat.newLine.beforeWhileInDoWhile": true, // Put 'while' of do-while on new line.
    "C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyFunction": true, // Keep empty function closing brace on same line.
    "C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyType": true, // Keep empty type closing brace on same line.

    // =========================================================================
    // LaTeX Workshop extension
    // Build, view and formatting configuration for LaTeX
    // =========================================================================
    "latex-workshop.latex.autoBuild.run": "never", // Do not auto-build LaTeX on changes.
    "latex-workshop.showContextMenu": true, // Show LaTeX context menu items.
    "latex-workshop.intellisense.package.enabled": true, // Enable LaTeX package IntelliSense.
    "latex-workshop.message.error.show": false, // Do not show error popups for builds.
    "latex-workshop.message.warning.show": false, // Do not show warning popups for builds.
    "latex-workshop.latex.outDir": "%DIR%", // Output directory same as root file.
    "latex-workshop.latex.autoClean.run": "onFailed", // Auto-clean only on failed builds.
    "latex-workshop.latex.recipe.default": "lastUsed", // Default to last used recipe.
    "latex-workshop.view.pdf.viewer": "external", // Use external PDF viewer by default.
    "latex-workshop.view.pdf.external.viewer.command": "D:/SumatraPDF/SumatraPDF.exe", // External PDF viewer command.
    "latex-workshop.view.pdf.external.viewer.args": ["--unique", "%PDF%"], // Arguments for external viewer.
    "latex-workshop.view.pdf.external.synctex.command": "D:/SumatraPDF/SumatraPDF.exe", // Synctex external command.
    "latex-workshop.view.pdf.external.synctex.args": [
        "-forward-search", // Forward search arg
        "%TEX%", // File path placeholder
        "%LINE%", // Line placeholder
        "-reuse-instance", // Reuse viewer instance
        "-inverse-search", // Inverse search mode
        "\"D:/VSCode/Code.exe\" \"D:/VSCode/resources/app/out/cli.js\" -r -g \"%f:%l\"", // Inverse-search command (note: adjust path if needed)
        "%PDF%" // PDF placeholder
    ],
    "latex-workshop.view.pdf.internal.synctex.keybinding": "double-click", // Internal Synctex forward keybinding.
    "latex-workshop.view.pdf.ref.viewer": "auto", // Auto-select PDF reference viewer.
    "latex-workshop.formatting.latex": "latexindent", // Use latexindent formatter.
    "latex-workshop.formatting.latexindent.path": "/usr/local/texlive/2025/bin/x86_64-linux/latexindent", // Path to latexindent.
    "latex-workshop.formatting.latexindent.args": [
        "-c",
        "%DIR%/",
        "%TMPFILE%",
        "-y=defaultIndent:'    '",
        "-l",
        "%WORKSPACE_FOLDER%/.latexindent.yaml",
        "-m",
        "-g=/dev/null"
    ], // Args for latexindent.
    "latex-workshop.latex.tools": [
        {
            "name": "xelatex",
            "command": "xelatex",
            "args": ["-synctex=1", "-interaction=nonstopmode", "-file-line-error", "%DOCFILE%"]
        },
        {
            "name": "pdflatex",
            "command": "pdflatex",
            "args": ["-synctex=1", "-interaction=nonstopmode", "-file-line-error", "%DOCFILE%"]
        },
        {
            "name": "latexmk",
            "command": "latexmk",
            "args": [
                "-synctex=1",
                "-interaction=nonstopmode",
                "-file-line-error",
                "-pdf",
                "-outdir=%OUTDIR%",
                "%DOCFILE%"
            ]
        },
        { "name": "bibtex", "command": "bibtex", "args": ["%DOCFILE%"] },
        { "name": "biber", "command": "biber", "args": ["%DOCFILE%"] }
    ],
    "latex-workshop.latex.recipes": [
        { "name": "XeLaTeX", "tools": ["xelatex"] },
        { "name": "XeLaTeX^2", "tools": ["xelatex", "xelatex"] },
        { "name": "PDFLaTeX", "tools": ["pdflatex"] },
        { "name": "BibTeX", "tools": ["bibtex"] },
        { "name": "LaTeXmk", "tools": ["latexmk"] },
        { "name": "XeLaTeX -> BibTeX -> XeLaTeX^2", "tools": ["xelatex", "bibtex", "xelatex", "xelatex"] },
        { "name": "XeLaTeX -> Biber -> XeLaTeX^2", "tools": ["xelatex", "biber", "xelatex", "xelatex"] },
        { "name": "PDFLaTeX -> BibTeX -> PDFLaTeX^2", "tools": ["pdflatex", "bibtex", "pdflatex", "pdflatex"] }
    ],
    "latex-workshop.latex.clean.fileTypes": [
        "*.aux",
        "*.bbl",
        "*.blg",
        "*.idx",
        "*.ind",
        "*.lof",
        "*.lot",
        "*.out",
        "*.toc",
        "*.acn",
        "*.acr",
        "*.alg",
        "*.glg",
        "*.glo",
        "*.gls",
        "*.ist",
        "*.fls",
        "*.log",
        "*.fdb_latexmk",
        "*.synctex.gz"
    ], // File types to clean.

    // =========================================================================
    // Other extensions and miscellaneous settings
    // =========================================================================
    "prettier.tabWidth": 4, // Prettier tab width.
    "prettier.useTabs": false, // Use spaces in Prettier.
    "prettier.proseWrap": "preserve", // Preserve prose wrapping.
    "prettier.bracketSameLine": true, // Put > of multi-line tags on last line.
    "prettier.singleAttributePerLine": true, // Single attribute per line in markup.
    "emmet.triggerExpansionOnTab": true, // Expand Emmet with Tab.
    "emmet.showAbbreviationSuggestions": true, // Show Emmet suggestion entries.
    "emmet.showExpandedAbbreviation": "always", // Always preview Emmet expansions.
    "emmet.includeLanguages": { "vue-html": "html", "vue": "html", "wpy": "html" }, // Enable Emmet for extra languages.
    "cmake.configureOnOpen": true, // Run CMake configure on open.
    "cmake.additionalCompilerSearchDirs": ["/usr/bin"], // Extra compiler search dirs.
    "cmake.generator": "Ninja", // CMake generator.
    "cmake.buildDirectory": "${workspaceFolder}/build", // Build output directory.
    "cmake.showNotAllDocumentsSavedQuestion": false, // Do not ask about unsaved docs before configure.
    "codesnap.backgroundColor": "#f2f2f2", // CodeSnap background color.
    "codesnap.boxShadow": "5px 5px 60px 0px #888888", // CodeSnap box shadow.
    "codesnap.containerPadding": "3em", // CodeSnap container padding.
    "codesnap.roundedCorners": true, // CodeSnap rounded corners.
    "codesnap.showWindowTitle": true, // Show window title in CodeSnap.
    "codesnap.showLineNumbers": true, // Show line numbers in CodeSnap.
    "codesnap.realLineNumbers": true, // Use real line numbers in CodeSnap.
    "codesnap.transparentBackground": false, // Do not use transparent background for CodeSnap.
    "codesnap.target": "container", // CodeSnap capture target.
    "css.format.spaceAroundSelectorSeparator": true, // Space around selector separators in CSS formatter.
    "java.format.settings.url": "/home/arshtyi/.vscode/extensions/redhat.java-1.41.1-win32-x64/formatters/eclipse-formatter.xml", // Java formatter settings file path.
    "tinymist.formatterMode": "typstyle", // Tinymist formatter mode.
    "tinymist.formatterIndentSize": 4, // Tinymist indent size.
    "masmtasm.ASM.emulator": "dosbox", // MASM/TASM emulator.
    "masmtasm.ASM.assembler": "TASM", // MASM/TASM assembler.
    "vscode-office.openOutline": false, // Do not auto-open outline for Office files.
    "vscode-office.editorTheme": "Auto", // Office viewer theme.
    "redhat.telemetry.enabled": true // Red Hat extension telemetry enabled.
}
